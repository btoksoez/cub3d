#include "../includes/cub3d.h"

#define WINDOW_WIDTH 1080
#define WINDOW_HEIGHT 720
#define TILE_SIZE 10

// Function to create the map image
void *create_map_image(void *mlx_ptr, void *tile_img_ptr) {
    void *map_img_ptr;
    int *tile_data;
    int tile_width, tile_height;

    // Create a new image for the map
    map_img_ptr = mlx_new_image(mlx_ptr, 10 * TILE_SIZE, 10 * TILE_SIZE);
    if (!map_img_ptr) {
        // Handle error
        return NULL;
    }

    tile_data = (int *)mlx_get_data_addr(tile_img_ptr, &tile_width, &tile_height, &tile_width);

    int *map_data = (int *)mlx_get_data_addr(map_img_ptr, &tile_width, &tile_height, &tile_width);

    // Draw the individual field images onto the map image
    for (int y = 0; y < 10; ++y) {
        for (int x = 0; x < 10; ++x) {
            for (int i = 0; i < TILE_SIZE; ++i) {
                for (int j = 0; j < TILE_SIZE; ++j) {
                    map_data[(y * TILE_SIZE + i) * 10 * TILE_SIZE + (x * TILE_SIZE + j)] = tile_data[i * TILE_SIZE + j];
                }
            }
        }
    }

    return map_img_ptr;
}

void draw_map(void *mlx_ptr, void *win_ptr, void *map_img_ptr) {
    // Calculate the position to draw the map in the center of the window
    int map_x = (WINDOW_WIDTH - 10 * TILE_SIZE) / 2;
    int map_y = (WINDOW_HEIGHT - 10 * TILE_SIZE) / 2;

    // Draw the map image to the window
    mlx_put_image_to_window(mlx_ptr, win_ptr, map_img_ptr, map_x, map_y);
}

int main() {
    void *mlx_ptr;
    void *win_ptr;
    void *tile_img_ptr;
    void *map_img_ptr;
    int img_width, img_height;

    // Initialize MiniLibX
    mlx_ptr = mlx_init();
    if (!mlx_ptr) {
        printf("Failed to initialize MiniLibX\n");
        return -1;
    }

    // Create a window
    win_ptr = mlx_new_window(mlx_ptr, WINDOW_WIDTH, WINDOW_HEIGHT, "Map");
    if (!win_ptr) {
        printf("Failed to create window\n");
        return -1;
    }

    // Load the tile image from an XPM file
    tile_img_ptr = mlx_xpm_file_to_image(mlx_ptr, "textures/east.xpm", &img_width, &img_height);
    if (!tile_img_ptr) {
        printf("Failed to load XPM image\n");
        return -1;
    }

    // Create the map image using the tile image
    map_img_ptr = create_map_image(mlx_ptr, tile_img_ptr);
    if (!map_img_ptr) {
        printf("Failed to create map image\n");
        return -1;
    }

    // Draw the map
    draw_map(mlx_ptr, win_ptr, map_img_ptr);

    // Enter the event loop
    mlx_loop(mlx_ptr);

    // Clean up resources
    mlx_destroy_image(mlx_ptr, map_img_ptr);
    mlx_destroy_image(mlx_ptr, tile_img_ptr);

    return 0;
}
